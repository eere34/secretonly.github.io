--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bp)local bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db,dc,dd=125,64,30,75,41,47,99,51,86,71,45,42,41,53,33,95,81,95,73,57,83,77,88,16,86,20,69,35,38,50,99,36,72,30,52,53,94,78,28,52,22,18,31,42,82,91,92,10,50,24,31 while bp~=77 do if bq>=837 then if bq>=1149 then if bq<=1268 then if bq<=1188 then if bq<1182 then bq=1188 cu=function()local bp,de do de,bp=ch(bz,bs,(bs+2))end do bs=(bs+2);end return((bp*256)+de);end else bq=1212 cg=function()local bp,de,df,dg,dh,di,dj,dk=58,39,91,20,10,79,67,50,96,23,92,72,44,93,93,23,56 while bp~=34 do if de>=205 then if de>=298 then if de<=298 then de=321 if 0==df then if 0~=dj then do df=1 end dh=0 else return(dk*0)end elseif 2047~=df then else if 0==dj then do return(dk*(0/0))end else return(dk*(1/0))end end else if de<354 then de=358 return(dk*(2^(df-1023))*(dj/cz+dh))else bp=34;end end else if de<=205 then df=br(20,dg,11)de=241 else if de>248 then do dh=1 end de=298 else do dj=(br(0,dg,20)*4294967296+di)end de=275 end end end else if de<=60 then if de>48 then di=bv()de=93 else df,dg,dh,di,dj,dk=nil de=60 end else if de<=93 then dg=bv()de=121 else if de<152 then if((di==bc and dg==0))then do return 0 end end de=158 else dk=((-1)^br(31,dg,1))de=205 end end end end end end end else if bq<=1212 then bq=1232 ci=function(bc,bc,bc,bc)local bc,bp,de,df=72,36,93,51,13,90,24,88,45,29,14,47,98,68,59,76 while bc~=44 do if bp>=136 then if bp>=183 then if bp<212 then bp=214 do return de;end else bc=44;end else bs=(bs+df);bp=183 end else if bp<=36 then bp=66 de,df=nil else if bp>74 then bp=136 de=bz:sub(bs,(bs+df-1))else bp=96 df=bv()end end end end end else if bq>1239 then bq=1298 do cw={}end else bq=1268 do ck=function(...)do return{...},ca('#',...)end end end end end end else if bq>=1402 then if bq<=1402 then bq=1444 bx=function(bc,bp,de,df,df,df,df)local df,dg,dh,di,dj dj=bc[52]do dh=dc end df=bc[173]do dg=bc[117]end di=bc[75]return function(...)local bc,dh,dk,dl,dm,dn,_do,dp,dq do dh=1 end dq=-1 do dk=-1 end dn={}dl={...}_do=(ca('#',...)-1)bc={}dm={}for dk=0,_do do if(not(dk<df))then dn[(dk-df)]=dl[(dk+1)];else do dm[dk]=dl[(dk+1)];end end;end;dp=(_do-df+1)while true do local df,dk,dl,dn,_do,dp,dr,ds,dt,du do dp=dg[dh]end dt=dp[85]dn=dp[171]_do=dp[23]do df=dp[160]end dr=dp[140]do dk=dp[92]end du=dp[90]ds=dp[98]dl=dp[62]if not(dt<35)then do if not(dt>n)then if not(dt>42)then if not(dt>38)then if not(dp[85]<37)then if(dt<38)then do return dm[_do]end else dg[dh]={[140]=7,[85]=dp[85]-33,[98]=7,[92]=0,[23]=7};dh=(dh-1);end else if(dt>35)then di=dc[_do](di)else do dm[_do]=di[ds]end end end else do if not(dt>e)then if not(dt~=39)then local e,n,dn dn=dp[23]n={dm[dn](cl(dm,dn+1,dq))}e=0 for du=dn,dr do e=(e+1);do dm[du]=n[e];end end else do dm[_do]=(dm[ds]-dm[dr]);end end else if(dp[85]<42)then dm[_do]=nil;else local e,n,dn e=dp[23]dn={dm[e](dm[e+1])}n=0 for du=e,dp[140]do n=(n+1);dm[du]=dn[n];end end end end end else if not(dt>46)then if not(dt<45)then if(dp[85]<46)then dg[dh]={[92]=0,[140]=1,[98]=14,[23]=b,[85]=dt- -5};do dh=(dh-1);end else dg[dh]={[98]=63,[85]=dt-11,[23]=18,[140]=51,[92]=v};dh=(dh-a);end else if(dt<44)then if not dm[_do]then dh=ds;end;else dg[dh]={[92]=0,[140]=8,[85]=dt-31,[23]=6,[98]=m};dh=(dh-1);end end else if not(dt<49)then if not(dt<50)then if(dt>50)then dm[_do][di[ds]]=di[dr];else local a a=_do dm[a](cl(dm,(a+1),dp[98]))end else dm[_do]=#dm[ds];end else if(dt<48)then dm[_do]=dm[ds];else dh=ds;end end end end else do if not(dt>60)then if not(dt<56)then if not(dt<58)then if not(dp[85]<59)then if(dt<60)then dg[dh]={[23]=11,[92]=0,[98]=47,[85]=dt-32,[bn]=12};dh=(dh-1);else dm[_do]=de[di[ds]];end else do dm[_do]=bx(dj[ds],nil,de);end end else do if(dt>56)then dg[dh]={[92]=0,[98]=22,[23]=16,[85]=dt-22,[140]=46};dh=(dh-1);else dg[dh]={[t]=dt-21,[98]=22,[92]=0,[140]=80,[23]=13};dh=(dh-1);end end end else if not(dt>bl)then if(dt<bh)then dm[_do][dm[dp[x]]]=dm[dr];else local a a=_do dm[a]=dm[a](cl(dm,a+1,dq));end else if(dp[85]<55)then dg[dh]=cw[dk];dh=ds;else dg[dh]={[92]=y,[98]=9,[140]=11,[h]=10,[85]=dt-20};do dh=(dh-1);end end end end else if not(dt>be)then do if not(dp[85]<63)then if not(dp[85]~=63)then dm[_do]=(dm[dp[98]]%di[dr]);else local a a=dp[23]do do return dm[a](cl(dm,(a+1),dp[98]))end end;end else if(dt<62)then dg[dh]={[23]=2,[92]=0,[98]=28,[140]=3,[85]=dt-z};dh=(dh-1);elseif dm[_do]then dh=ds;end end end else do if not(dt>66)then if(dt>65)then dg[dh]={[85]=dt-53,[92]=0,[140]=13,[23]=10,[98]=10};do dh=(dh-1);end else local a,b,e,h,m m=_do a=dr e=(m+2)h={dm[m](dm[m+1],dm[e])}for n=1,a do dm[(e+n)]=h[n]end b=dm[(m+3)]if b then dm[e]=b else dh=ds;end;end else if not(dt<68)then if(dt<69)then dg[dh]={[23]=4,[85]=dt-33,[140]=4,[92]=0,[98]=12};dh=(dh-1);else local a,b b=dp[98]a=dm[b]for e=(b+1),dr do a=(a..dm[e]);end;dm[dp[23]]=a;end else local a,b,e,h h=dp[23]do a,e=ck(dm[h](dm[(h+1)]))end dq=(e+h-1)b=0 for e=h,dq do do b=(b+1);end do dm[e]=a[b];end end;end end end end end end end end else if not(dt<17)then if not(dt<26)then do if not(dt<30)then if not(dp[85]>31)then if(dt>30)then local a a=_do dm[a]=dm[a](dm[a+1]);else dm[_do]();end else if not(dt<33)then if(dt<34)then local a,b,e e=dj[ds]a=nil b={}a=cd({},{__index=function(h,h)local h=b[h];return h[k][h[bm]];end,__newindex=function(h,h,k)local h=b[h]h[1][h[2]]=k;end;});for h=1,dr do local k k=dp[57][h]if k[1]then b[(h-1)]={dm,k[2],nil,nil};else b[(h-1)]={bp,k[2],nil,nil,nil};end;bc[(#bc+1)]=b;end;dm[_do]=bx(e,a,de);else dm[_do]=bp[ds];end else dm[_do]=(dm[ds]+di[dr]);end end else do if not(dt<28)then if(dt<29)then do while(dm[_do]==di[dr])do dh=dp[98];break end end else local a a=dp[23]dm[a](dm[(a+1)])end else if(dp[85]<27)then dg[dh]={[140]=21,[23]=15,[85]=dp[85]- -26,[98]=20,[92]=0};dh=(dh-1);else dm[dp[23]][di[dp[98]]]=dm[dr];end end end end end else if not(dt>20)then if not(dt<q)then if(dt<20)then bp[ds]=dm[_do];else local a,b a=dp[23]b={}if(#bc>0)then for e=1,#bc do local h h=bc[e]for e=0,#h do local k,m,n k=h[e]do m=k[1]end n=k[2]while m==dm and n>=0 do b[n]=m[n]k[1]=b break end end end end return cl(dm,a,dq);end else if(dt>17)then do dm[_do]=(dm[ds]+dm[dp[140]]);end else dm[dl]=(function()dm[_do]=bx(dj[df],nil,de);end)end end else if not(dp[85]<23)then if not(dt>23)then dm[_do]=(dm[ds]/di[dr]);else if(dt>24)then do if((dm[_do]<dm[dp[140]]))then dh=ds;end;end else dm[dp[23]]={};end end else do if(dt<22)then dg[dh]={[23]=12,[140]=57,[85]=dp[85]- -14,[98]=34,[92]=0};dh=(dh-1);else if((di[_do]<dm[dr]))then dh=ds;end;end end end end end else if not(dt>7)then if not(dt<4)then do if not(dp[85]<6)then if not(dp[85]~=6)then dm[_do]=(not dm[ds]);else local a do a={}end while(#bc>0)do for b=1,#bc do local b=bc[b]for e=0,#b do local b=b[e]local e=b[1]local h=b[2]if e==dm and h>=0 then a[h]=e[h]b[1]=a end end end break end return dm[_do],false;end else if(dt>4)then local a,b b=_do do a=dm[ds]end dm[(b+bg)]=a;dm[b]=a[di[dp[140]]];else local a,b,e do b=_do end a=dm[b]do e=dm[(b+2)]end if((e>0))then if((a>dm[b+1]))then do dh=ds;end else dm[(b+3)]=a;end elseif((a<dm[b+1]))then dh=ds;else dm[(b+3)]=a;end end end end else do if not(dt<2)then do if(dp[85]<3)then do dm[dp[23]]=dm[dp[98]][dm[dr]];end else local a a=_do dm[a]=dm[a](cl(dm,a+1,ds));end end else if ba==dt then do dh=((di[dp[23]]~=di[dr])and ds or dh)end else dm[_do]=(bb~=ds);end end end end else if not(dp[85]<12)then if not(dp[85]>13)then do if(dt<13)then dg[dh]={[98]=22,[92]=0,[23]=11,[85]=dt- -23,[140]=19};dh=(dh-1);else do dm[_do]=dm[dp[98]][di[dp[140]]];end end end else if not(dt<15)then if not(dt~=15)then do dh=((di[_do]<dm[dr])and dp[98]or dh)end else if(dm[dr]~=dm[_do])then dh=ds;end;end else local a,b,e a=_do e=dm[(a+2)]b=(dm[a]+e)dm[a]=b;if((e>u))then do while((b<=dm[a+1]))do dh=ds;dm[a+3]=b;break end end elseif(not(b<dm[a+1]))then dh=ds;dm[(a+3)]=b;end end end else if not(dt>9)then if(dt<9)then if(not(dm[_do]==di[dr]))then dh=dp[98];end;else local a,b,e,h h=dp[23]e,b=ck(dm[h](cl(dm,(h+1),ds)))dq=(b+h-1)do a=0 end for b=h,dq do a=(a+1);dm[b]=e[a];end;end else if(dt>10)then dh=((dm[_do]~=dm[dr])and dp[98]or dh)else dm[_do]=(dm[ds]*di[dp[140]]);end end end end end end dh=(dh+1);end;end;end else if bq<1487 then bq=1492 return bx(da(by()),{},by())();else break end end else if bq>=1325 then if bq>1329 then cs={}bq=1402 else dc={}bq=1365 end else da=function(a,b,b)local b,e,h,k,m,n,q,t=64,61,60,73,82,11,60,38,12,76,10,78,34,80,52,20,97,44,19,29,31,45,19,49,26 while b~=45 do if e<=268 then if e>=191 then if e>=245 then if e>252 then for u=w,bv()do local v,w,x,y,z,ba=89,72,43,27,66,29,62,51,74,49,62,27,99,75,60,91,44,14,33,98,20,35,25,18,85 while v~=50 do if w<=350 then if w<=165 then if w<=92 then if w<83 then w=92 x,y,z,ba=nil else x={{},nil,nil}w=133 end else if w<163 then w=165 x[171]=bt();else w=182 x[57]={};end end else if w>=259 then if w<=259 then w=306 y=bv()else if w>314 then w=366 x[153]=ba else w=350 ba=cq(z,1,2)end end else if w<205 then w=210 if 1==bt()then for ba=1,bt()do x[57][ba]={bt()==0,bv()}end end else z=bv()w=259 end end end else if w<=470 then if w<=390 then if w<381 then x[85]=cq(y,1,11);w=390 else w=425 x[23]=cq(z,3,11);end else if w>433 then x[140]=cq(z,21,29);w=512 else x[98]=cq(y,12,33);w=470 end end else if w>=590 then if w>=636 then if w<661 then w=665 h[u]=x;else v=50;end else x[bo]=-x[140]w=636 end else if w>520 then x[90]=-x[23]w=590 else do x[92]=cq(z,12,20);end w=543 end end end end end end e=305 else m[173]=bt();e=268 end else if e>200 then e=245 do for u=(#cw+1),(#cw+k)do local v,w,x,y,z=55,42,98,86,89,72,42,24,13,34,45,69,75,76,25,67,56,20,33,42,86,20,40,29,27 while v~=37 do if w<=258 then if w>=161 then if w>=237 then if w>241 then x[85]=cq(z,1,11);w=305 else w=258 x[153]=cq(y,1,2);end else if w<195 then w=201 z=bv()else x[92]=bt();w=237 end end else if w>=109 then if w<137 then w=143 x[171]=bt();else w=161 y=bv()end else if w<73 then w=78 x,y,z=nil else x={}w=109 end end end else if w<=377 then if w<=327 then if w<324 then w=327 x[23]=cq(y,3,11);else x[160]=cq(y,12,20);w=358 end else if w>365 then w=397 x[98]=cq(z,12,33);else w=377 x[140]=cq(y,21,29);end end else if w<=424 then if w>400 then w=444 x[62]=-x[140]else w=424 x[90]=-x[23]end else if w<464 then w=466 cw[u]=x;else v=37;end end end end end end end else e=226 do k=bv()end end end else if e<=104 then if e<99 then e=104 h,k,m,n,q,t=nil else e=146 h={}end else if e>153 then e=191 do m={}end else e=171 do t={}end end end end else if e>=444 then if e>=537 then if e>=583 then if e>588 then b=45;else e=630 return m;end else m[52]=t;e=583 end else if e<482 then e=489 do m[75]=n end else e=537 for b=l,bv()do do t[b-1]=da();end end end end else if e>=381 then if e>388 then e=444 for b=1,q do local k,l,t,u=52,42,22,19,79,15,68,90,93,82,90,44,76,63 while k~=30 do if l<=120 then if l>=77 then if l<112 then l=120 t=bt()else l=162 u=nil end else l=77 t,u=nil end else if l>=202 then if l<240 then l=243 n[b]=u;else k=30;end else if(1==t)then u=(not(bt()==0));elseif(not(t~=2))then do u=cg();end elseif(0==t)then u=ci();elseif(not(t~=4))then u=a[ci()];end;l=202 end end end end else n={}e=416 end else if e>308 then q=bv()e=381 else e=336 m[117]=h;end end end end end end bq=1325 end end end else if bq<=948 then if bq>=900 then if bq>=919 then if bq>923 then bq=979 for a=1,31 do dd[a]=bu bu=(bu*2)end else bq=948 bu=2 end else do dd={[0]=1}end bq=919 end else if bq>843 then bq=900 cz=(2^52)else bq=853 cf=''end end else if bq>=1068 then if bq>=1100 then if bq>1107 then bt=function()local a a=ch(bz,bs,bs)bs=(bs+1);return a;end bq=1149 else bq=1119 do bv=function()local a,b,e,h e,b,a,h=ch(bz,bs,(bs+3))bs=(bs+4);do return((h*16777216)+(a*65536)+(b*256)+e);end end end end else do bs=1 end bq=1100 end else if bq<=979 then bq=1011 do br=function(a,b,e,h)local h,k,l=52,64,10,75,44,97,65,45,16,91,42,99,66 while h~=36 do if k<=130 then if k<=64 then l=nil k=88 else if k<126 then do l=nil end k=130 else k=177 l=((b/dd[a])%dd[e])end end else if k>=224 then if k>231 then break else k=273 return l end else k=224 l=(l-l%1)end end end end end else if bq<1021 then cc=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local e,h=0,1 while a>0 and b>0 do local k,l=a%16,b%16 e=e+cy[k+1][l+1]*h a=(a-k)/16 b=(b-l)/16 h=h*16 end e=e+a*h+b*h return e end)bq=1026 else bq=1068 cq=function(a,b,e,h,h,h)local h do h=((a/2^(b-1))%2^((e-1)-(b-1)+1))end return(h-h%1);end end end end end end else if bq<=415 then if bq<=206 then if bq<=113 then if bq>69 then ch=string.byte bq=140 else br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da,db,dc,dd=nil bq=113 end else if bq<=140 then bq=176 cn=string.char else if bq>183 then do cj=string.gsub end bq=250 else db=string.sub bq=206 end end end else if bq>=362 then if bq>=388 then if bq>392 then cd=setmetatable bq=440 else by=(getfenv or function()return _ENV end)bq=415 end else do cb=math.ldexp end bq=388 end else if bq>=286 then if bq<309 then ct=table.concat bq=313 else bq=362 do cv=table.insert end end else cm=string.rep bq=286 end end end else if bq>=621 then if bq<=687 then if bq>=652 then if bq>659 then bq=724 cp={}else bq=687 bw=tonumber end else bq=652 cl=(unpack or table.unpack)end else if bq>=771 then if bq<790 then bq=793 bz=cjfunction(a,b,b)do return cp[bw(a,16)]end end)else bq=837 cy={{0,1,2,3,4,5,6,p,8,9,10,o,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,bf,bk,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,i,bi,0,1,2,3,12,13,14,15,8,9,g,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,bd,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,c,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,s,1,0,j,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{d,15,12,13,10,11,8,bj,6,7,f,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end else bq=771 for a=0,255 do do cp[a]=cn(a);end end end end else if bq<=488 then if bq<480 then bq=488 ca=select else co=type bq=503 end else if bq>=550 then if bq>554 then cx=math.floor bq=621 else bq=591 cr=math.abs end else bq=550 ce=(function(a,b,b,b)if not(co(a)~=r)then return true else return false end end)end end end end end end end)(1,12,15,14,40,4,10,23,6,7,1,1,6,51,11,7,19,'number',2,85,0,0,1,98,0,34,0,0,0,11,64,5,1,53,7,9,10,53,2,140,62)
